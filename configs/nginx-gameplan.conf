# GamePlan Nginx Configuration Template
# Copy this file to /etc/nginx/sites-available/gameplan
# Replace 'your-domain.com' with your actual domain name

server {
    listen 80;
    server_name your-domain.com www.your-domain.com;
    
    # Redirect HTTP to HTTPS (uncomment after SSL setup)
    # return 301 https://$server_name$request_uri;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=gameplan:10m rate=10r/s;
    limit_req zone=gameplan burst=20 nodelay;

    # Client settings
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Proxy to GamePlan application
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Health check endpoint (no rate limiting)
    location /api/health {
        proxy_pass http://localhost:3000/api/health;
        access_log off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API endpoints with stricter rate limiting
    location /api/ {
        limit_req zone=gameplan burst=10 nodelay;
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Static files caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://localhost:3000;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Optional: serve static files directly if available
        # try_files $uri @proxy;
    }

    # Favicon
    location = /favicon.ico {
        proxy_pass http://localhost:3000/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Robots.txt
    location = /robots.txt {
        proxy_pass http://localhost:3000/robots.txt;
        access_log off;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(env|log|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages (optional)
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    # Logging
    access_log /var/log/nginx/gameplan_access.log;
    error_log /var/log/nginx/gameplan_error.log;
}

# HTTPS configuration (uncomment after SSL certificate setup)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
# 
#     # SSL certificate paths (Let's Encrypt)
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
# 
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA;
#     ssl_prefer_server_ciphers off;
#     ssl_dhparam /etc/nginx/dhparam.pem;
# 
#     # SSL session settings
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_stapling on;
#     ssl_stapling_verify on;
# 
#     # Security headers for HTTPS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header Referrer-Policy "no-referrer-when-downgrade" always;
#     add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
# 
#     # Rate limiting
#     limit_req_zone $binary_remote_addr zone=gameplan_ssl:10m rate=10r/s;
#     limit_req zone=gameplan_ssl burst=20 nodelay;
# 
#     # Client settings
#     client_max_body_size 10M;
#     client_body_timeout 60s;
#     client_header_timeout 60s;
# 
#     # Proxy to GamePlan application
#     location / {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#         proxy_read_timeout 86400;
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         
#         # Buffer settings
#         proxy_buffering on;
#         proxy_buffer_size 128k;
#         proxy_buffers 4 256k;
#         proxy_busy_buffers_size 256k;
#     }
# 
#     # Health check endpoint
#     location /api/health {
#         proxy_pass http://localhost:3000/api/health;
#         access_log off;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# 
#     # API endpoints with stricter rate limiting
#     location /api/ {
#         limit_req zone=gameplan_ssl burst=10 nodelay;
#         proxy_pass http://localhost:3000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# 
#     # Static files caching
#     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
#         proxy_pass http://localhost:3000;
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#         add_header Vary Accept-Encoding;
#     }
# 
#     # Favicon
#     location = /favicon.ico {
#         proxy_pass http://localhost:3000/favicon.ico;
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#         access_log off;
#     }
# 
#     # Robots.txt
#     location = /robots.txt {
#         proxy_pass http://localhost:3000/robots.txt;
#         access_log off;
#     }
# 
#     # Block access to sensitive files
#     location ~ /\. {
#         deny all;
#         access_log off;
#         log_not_found off;
#     }
# 
#     location ~ \.(env|log|conf)$ {
#         deny all;
#         access_log off;
#         log_not_found off;
#     }
# 
#     # Custom error pages
#     error_page 404 /404.html;
#     error_page 500 502 503 504 /50x.html;
# 
#     # Logging
#     access_log /var/log/nginx/gameplan_ssl_access.log;
#     error_log /var/log/nginx/gameplan_ssl_error.log;
# }
