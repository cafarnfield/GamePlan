<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Game - GamePlan</title>
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <%- include('partials/adminLayoutHeader') %>
    
    <div class="admin-content">
        <div class="admin-page-header">
            <h1 class="admin-page-title">Add New Game</h1>
            <p class="admin-page-subtitle">Add games to the GamePlan library</p>
        </div>
        
        <% if (error) { %>
            <div class="error-message">
                <div class="error-content">
                    <span class="error-icon">‚ö†Ô∏è</span>
                    <span class="error-text"><%= error %></span>
                </div>
            </div>
        <% } %>
        
        <% if (success) { %>
            <div class="success-message">
                <div class="success-content">
                    <span class="success-icon">‚úÖ</span>
                    <span class="success-text"><%= success %></span>
                </div>
            </div>
        <% } %>

        <div class="game-wizard">
            <!-- Game Search Section -->
            <div class="game-search-container">
                <div class="search-box">
                    <input type="text" id="gameSearch" placeholder="Search for any game..." autocomplete="off">
                    <div class="search-icon">üîç</div>
                </div>
                
                <div class="search-results" id="searchResults">
                    <div class="search-placeholder">
                        <div class="placeholder-icon">üéÆ</div>
                        <h3>Start typing to search</h3>
                        <p>We'll search Steam, RAWG, and our game database</p>
                    </div>
                </div>

                <div class="selected-game" id="selectedGame" style="display: none;">
                    <div class="game-card selected">
                        <div class="game-card-content">
                            <div class="game-image-container">
                                <div class="game-image">
                                    <img id="selectedGameImage" src="" alt="" style="display: none;">
                                    <div class="game-placeholder" id="selectedGamePlaceholder">üéÆ</div>
                                    <div class="game-title-overlay" id="selectedGameOverlay"></div>
                                </div>
                            </div>
                            <div class="game-info">
                                <h3 id="selectedGameName"></h3>
                                <p id="selectedGameDescription"></p>
                                <div class="game-meta">
                                    <span class="game-source" id="selectedGameSource"></span>
                                    <span class="game-platforms" id="selectedGamePlatforms"></span>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="change-game-btn" onclick="changeGame()">Change Game</button>
                    </div>
                </div>

                <div class="manual-game-option">
                    <button type="button" class="action-button secondary" id="addManualGameBtn" onclick="showManualGameForm()">
                        Can't find your game? Add it manually
                    </button>
                </div>

                <!-- Manual Game Form -->
                <div class="manual-game-form" id="manualGameForm" style="display: none;">
                    <div class="form-section">
                        <h3>Add Game Manually</h3>
                        <div class="warning-box">
                            <p><strong>Note:</strong> Manually added games will be added directly to the database.</p>
                        </div>

                        <div class="input-group">
                            <label for="manualGameName">Game Name</label>
                            <input type="text" id="manualGameName" name="manualGameName" 
                                   placeholder="Enter the exact game name">
                        </div>

                        <div class="input-group">
                            <label for="manualGameDescription">Game Description</label>
                            <textarea id="manualGameDescription" name="manualGameDescription" 
                                      placeholder="Brief description of the game"></textarea>
                        </div>

                        <div class="input-group">
                            <label>Game Categories</label>
                            <div class="category-grid">
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="Action">
                                    <span>Action</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="Adventure">
                                    <span>Adventure</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="Strategy">
                                    <span>Strategy</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="RPG">
                                    <span>RPG</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="FPS">
                                    <span>FPS</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="Racing">
                                    <span>Racing</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="Sports">
                                    <span>Sports</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="Simulation">
                                    <span>Simulation</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="Puzzle">
                                    <span>Puzzle</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="Horror">
                                    <span>Horror</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="Indie">
                                    <span>Indie</span>
                                </label>
                                <label class="category-option">
                                    <input type="checkbox" name="manualGameCategories" value="Other">
                                    <span>Other</span>
                                </label>
                            </div>
                        </div>

                        <div class="manual-actions">
                            <button type="button" class="action-button secondary" onclick="hideManualGameForm()">Cancel</button>
                            <button type="button" class="action-button primary" onclick="selectManualGame()">Use This Game</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Form to Submit -->
            <form id="add-game-form" method="POST" action="/admin/add-game" style="display: none;">
                <input type="hidden" id="game-name" name="name">
                <input type="hidden" id="game-description" name="description">
                <input type="hidden" id="steam-app-id" name="steamAppId">
                <input type="hidden" id="steam-data" name="steamData">
                <input type="hidden" id="rawg-id" name="rawgId">
                <input type="hidden" id="rawg-data" name="rawgData">
                <input type="hidden" id="game-source" name="source">
                <input type="hidden" id="manual-categories" name="categories">
                
                <div class="form-actions">
                    <button type="submit" class="action-button primary">Add Game to Library</button>
                    <a href="/admin/games" class="action-button secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>

    <script>
        let searchTimeout;
        let selectedGameData = null;

        // Initialize the form
        document.addEventListener('DOMContentLoaded', function() {
            // Game search functionality
            const gameSearch = document.getElementById('gameSearch');
            if (gameSearch) {
                gameSearch.addEventListener('input', handleGameSearch);
            }
        });

        // Game search functionality
        function handleGameSearch() {
            const query = this.value.trim();
            const resultsContainer = document.getElementById('searchResults');
            
            if (query.length < 2) {
                showSearchPlaceholder();
                return;
            }
            
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                searchGames(query);
            }, 300);
        }

        async function searchGames(query) {
            const resultsContainer = document.getElementById('searchResults');
            resultsContainer.innerHTML = '<div class="loading">üîç Searching games...</div>';
            
            try {
                // Search Steam games
                const steamResponse = await fetch(`/api/steam/search?q=${encodeURIComponent(query)}`);
                const steamGames = await steamResponse.json();
                
                // Search RAWG games
                const rawgResponse = await fetch(`/api/rawg/search?q=${encodeURIComponent(query)}`);
                const rawgGames = await rawgResponse.json();
                
                // Search existing games (if available)
                const existingGames = [];
                
                displaySearchResults(steamGames, rawgGames, existingGames);
            } catch (error) {
                console.error('Error searching games:', error);
                resultsContainer.innerHTML = '<div class="error">‚ùå Error searching games. Please try again.</div>';
            }
        }

        function displaySearchResults(steamGames, rawgGames, existingGames) {
            const resultsContainer = document.getElementById('searchResults');
            let html = '';
            
            // Combine and deduplicate results
            const allGames = [];
            
            // Add existing games first (highest priority)
            existingGames.forEach(game => {
                allGames.push({
                    type: 'existing',
                    id: game._id,
                    name: game.name,
                    description: game.description || 'No description available',
                    image: game.steamData?.header_image || game.rawgData?.background_image || null,
                    source: 'Database',
                    platforms: game.platforms || [],
                    data: game
                });
            });
            
            // Add Steam games (prefer over RAWG)
            steamGames.forEach(game => {
                if (!game.existsInDatabase) {
                    allGames.push({
                        type: 'steam',
                        id: game.appid,
                        name: game.name,
                        description: game.short_description || 'No description available',
                        image: game.header_image,
                        source: 'Steam',
                        platforms: ['PC'],
                        data: game
                    });
                }
            });
            
            // Add RAWG games (lowest priority)
            rawgGames.forEach(game => {
                if (!game.existsInDatabase && !game.hasSteamEquivalent) {
                    allGames.push({
                        type: 'rawg',
                        id: game.id,
                        name: game.name,
                        description: game.short_description || 'No description available',
                        image: game.background_image,
                        source: 'RAWG',
                        platforms: game.platforms || [],
                        data: game
                    });
                }
            });
            
            if (allGames.length === 0) {
                html = `
                    <div class="no-results">
                        <div class="no-results-icon">üòî</div>
                        <h3>No games found</h3>
                        <p>Try a different search term or add your game manually</p>
                    </div>
                `;
            } else {
                html = '<div class="search-results-list">';
                allGames.slice(0, 10).forEach(game => {
                    html += `
                        <div class="game-card simple-title" onclick="selectGame(${JSON.stringify(game).replace(/"/g, '&quot;')})">
                            <div class="game-title-only">
                                ${game.name}
                            </div>
                        </div>
                    `;
                });
                html += '</div>';
            }
            
            resultsContainer.innerHTML = html;
        }

        function showSearchPlaceholder() {
            const resultsContainer = document.getElementById('searchResults');
            resultsContainer.innerHTML = `
                <div class="search-placeholder">
                    <div class="placeholder-icon">üéÆ</div>
                    <h3>Start typing to search</h3>
                    <p>We'll search Steam, RAWG, and our game database</p>
                </div>
            `;
        }

        function selectGame(gameData) {
            selectedGameData = {
                type: gameData.type,
                data: gameData.data
            };
            
            if (gameData.type === 'existing') {
                selectedGameData.gameId = gameData.id;
            }
            
            // Update UI
            document.getElementById('selectedGameName').textContent = gameData.name;
            document.getElementById('selectedGameDescription').textContent = gameData.description;
            document.getElementById('selectedGameSource').textContent = gameData.source;
            document.getElementById('selectedGamePlatforms').textContent = gameData.platforms.join(', ');
            document.getElementById('selectedGameOverlay').textContent = gameData.name;
            
            if (gameData.image) {
                document.getElementById('selectedGameImage').src = gameData.image;
                document.getElementById('selectedGameImage').style.display = 'block';
                document.getElementById('selectedGamePlaceholder').style.display = 'none';
            } else {
                document.getElementById('selectedGameImage').style.display = 'none';
                document.getElementById('selectedGamePlaceholder').style.display = 'flex';
            }
            
            // Show selected game, hide search
            document.getElementById('searchResults').style.display = 'none';
            document.getElementById('selectedGame').style.display = 'block';
            document.getElementById('gameSearch').style.display = 'none';
            
            // Populate form fields
            document.getElementById('game-name').value = gameData.name;
            document.getElementById('game-description').value = gameData.description;
            
            if (selectedGameData.type === 'steam') {
                document.getElementById('steam-app-id').value = selectedGameData.data.appid;
                document.getElementById('steam-data').value = JSON.stringify(selectedGameData.data);
                document.getElementById('game-source').value = 'steam';
            } else if (selectedGameData.type === 'rawg') {
                document.getElementById('rawg-id').value = selectedGameData.data.id;
                document.getElementById('rawg-data').value = JSON.stringify(selectedGameData.data);
                document.getElementById('game-source').value = 'rawg';
            } else if (selectedGameData.type === 'existing') {
                document.getElementById('game-source').value = 'existing';
            } else if (selectedGameData.type === 'manual') {
                document.getElementById('game-source').value = 'manual';
            }
            
            // Show form
            document.getElementById('add-game-form').style.display = 'block';
        }

        function changeGame() {
            selectedGameData = null;
            document.getElementById('searchResults').style.display = 'block';
            document.getElementById('selectedGame').style.display = 'none';
            document.getElementById('gameSearch').style.display = 'block';
            document.getElementById('gameSearch').value = '';
            document.getElementById('add-game-form').style.display = 'none';
            showSearchPlaceholder();
        }

        // Manual game functions
        function showManualGameForm() {
            document.getElementById('manualGameForm').style.display = 'block';
            document.getElementById('addManualGameBtn').style.display = 'none';
        }

        function hideManualGameForm() {
            document.getElementById('manualGameForm').style.display = 'none';
            document.getElementById('addManualGameBtn').style.display = 'block';
            
            // Clear form
            document.getElementById('manualGameName').value = '';
            document.getElementById('manualGameDescription').value = '';
            document.querySelectorAll('input[name="manualGameCategories"]').forEach(cb => cb.checked = false);
        }

        function selectManualGame() {
            const name = document.getElementById('manualGameName').value.trim();
            const description = document.getElementById('manualGameDescription').value.trim();
            const categories = Array.from(document.querySelectorAll('input[name="manualGameCategories"]:checked')).map(cb => cb.value);
            
            if (!name) {
                showError('Please enter a game name');
                return;
            }
            if (!description) {
                showError('Please enter a game description');
                return;
            }
            if (categories.length === 0) {
                showError('Please select at least one category');
                return;
            }
            
            selectedGameData = {
                type: 'manual',
                data: {
                    name,
                    description,
                    categories,
                    tags: []
                }
            };
            
            // Update UI
            document.getElementById('selectedGameName').textContent = name;
            document.getElementById('selectedGameDescription').textContent = description;
            document.getElementById('selectedGameSource').textContent = 'Manual Entry';
            document.getElementById('selectedGamePlatforms').textContent = categories.join(', ');
            document.getElementById('selectedGameOverlay').textContent = name;
            document.getElementById('selectedGameImage').style.display = 'none';
            document.getElementById('selectedGamePlaceholder').style.display = 'flex';
            
            // Show selected game, hide manual form
            document.getElementById('manualGameForm').style.display = 'none';
            document.getElementById('selectedGame').style.display = 'block';
            document.getElementById('gameSearch').style.display = 'none';
            document.getElementById('addManualGameBtn').style.display = 'none';
            
            // Populate form fields
            document.getElementById('game-name').value = name;
            document.getElementById('game-description').value = description;
            document.getElementById('game-source').value = 'manual';
            document.getElementById('manual-categories').value = JSON.stringify(categories);
            
            // Show form
            document.getElementById('add-game-form').style.display = 'block';
        }

        // Error handling
        function showError(message) {
            // Create error message element
            const errorDiv = document.createElement('div');
            errorDiv.className = 'error-message';
            errorDiv.innerHTML = `
                <div class="error-content">
                    <span class="error-icon">‚ö†Ô∏è</span>
                    <span class="error-text">${message}</span>
                    <button class="error-close" onclick="this.parentElement.parentElement.remove()">√ó</button>
                </div>
            `;
            
            // Insert at top of admin content
            const adminContent = document.querySelector('.admin-content');
            adminContent.insertBefore(errorDiv, adminContent.firstChild);
            
            // Auto-remove after 5 seconds
            setTimeout(() => {
                if (errorDiv.parentNode) {
                    errorDiv.remove();
                }
            }, 5000);
            
            // Scroll to error
            errorDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }

        // Hide search results when clicking outside
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.search-results') && !e.target.closest('#gameSearch')) {
                const searchResults = document.getElementById('searchResults');
                if (searchResults && !document.getElementById('selectedGame').style.display === 'block') {
                    // Only hide if no game is selected
                    if (!selectedGameData) {
                        showSearchPlaceholder();
                    }
                }
            }
        });
    </script>

    <%- include('partials/adminLayoutFooter') %>
</body>
</html>
