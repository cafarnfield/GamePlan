<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - GamePlan</title>
    <link rel="stylesheet" href="/styles.css">
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
</head>
<body>
    <div class="container">
        <div class="auth-container">
            <div class="auth-header">
                <h1>ðŸŽ® GamePlan</h1>
                <h2>Set New Password</h2>
                <p>Enter your new password below. Make sure it's strong and secure.</p>
            </div>

            <% if (error) { %>
                <div class="alert alert-error">
                    <strong>Error:</strong> <%= error %>
                </div>
            <% } %>

            <form action="/reset-password" method="POST" class="auth-form" id="resetForm">
                <input type="hidden" name="token" value="<%= token %>">
                
                <div class="form-group">
                    <label for="password">New Password:</label>
                    <input 
                        type="password" 
                        id="password" 
                        name="password" 
                        required 
                        placeholder="Enter your new password"
                        autocomplete="new-password"
                        minlength="8"
                        maxlength="128"
                    >
                    <small class="form-help">
                        Password must be at least 8 characters long and contain uppercase, lowercase, number, and special character.
                    </small>
                </div>

                <div class="form-group">
                    <label for="confirmPassword">Confirm New Password:</label>
                    <input 
                        type="password" 
                        id="confirmPassword" 
                        name="confirmPassword" 
                        required 
                        placeholder="Confirm your new password"
                        autocomplete="new-password"
                        minlength="8"
                        maxlength="128"
                    >
                    <small class="form-help">
                        Re-enter your new password to confirm.
                    </small>
                </div>

                <div class="password-strength" id="passwordStrength" style="display: none;">
                    <div class="strength-bar">
                        <div class="strength-fill" id="strengthFill"></div>
                    </div>
                    <div class="strength-text" id="strengthText"></div>
                </div>

                <div class="password-match" id="passwordMatch" style="display: none;">
                    <span class="match-text" id="matchText"></span>
                </div>

                <button type="submit" class="btn btn-primary btn-full" id="submitBtn">
                    Reset Password
                </button>
            </form>

            <div class="auth-links">
                <p>
                    Remember your password? 
                    <a href="/login" class="link">Sign In</a>
                </p>
            </div>

            <div class="security-notice">
                <h3>ðŸ”’ Security Notice</h3>
                <ul>
                    <li>This password reset link can only be used once</li>
                    <li>The link will expire after 1 hour</li>
                    <li>Choose a strong, unique password</li>
                    <li>Don't share your password with anyone</li>
                </ul>
            </div>

            <% if (isDevelopmentAutoLogin) { %>
                <div class="dev-notice">
                    <p><strong>Development Mode:</strong> Auto-login is enabled</p>
                </div>
            <% } %>
        </div>
    </div>

    <style>
        .auth-container {
            max-width: 450px;
            margin: 50px auto;
            padding: 30px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
        }

        .auth-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .auth-header h1 {
            color: #007bff;
            margin: 0 0 10px 0;
            font-size: 2.5em;
        }

        .auth-header h2 {
            color: #333;
            margin: 0 0 10px 0;
            font-size: 1.5em;
        }

        .auth-header p {
            color: #666;
            margin: 0;
            font-size: 0.9em;
            line-height: 1.4;
        }

        .auth-form {
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }

        .form-group input {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            transition: border-color 0.3s;
            box-sizing: border-box;
        }

        .form-group input:focus {
            outline: none;
            border-color: #007bff;
        }

        .form-help {
            display: block;
            margin-top: 5px;
            font-size: 0.85em;
            color: #666;
            line-height: 1.3;
        }

        .password-strength {
            margin: 10px 0;
        }

        .strength-bar {
            width: 100%;
            height: 8px;
            background-color: #e0e0e0;
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 5px;
        }

        .strength-fill {
            height: 100%;
            transition: width 0.3s, background-color 0.3s;
            border-radius: 4px;
        }

        .strength-text {
            font-size: 0.85em;
            font-weight: bold;
        }

        .password-match {
            margin: 10px 0;
            font-size: 0.85em;
            font-weight: bold;
        }

        .match-text.match {
            color: #28a745;
        }

        .match-text.no-match {
            color: #dc3545;
        }

        .btn {
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.3s;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .btn-primary {
            background-color: #007bff;
            color: white;
        }

        .btn-primary:hover:not(:disabled) {
            background-color: #0056b3;
        }

        .btn-primary:disabled {
            background-color: #6c757d;
            cursor: not-allowed;
        }

        .btn-full {
            width: 100%;
        }

        .alert {
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 5px;
            font-size: 14px;
        }

        .alert-error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .auth-links {
            text-align: center;
            margin: 20px 0;
        }

        .auth-links p {
            margin: 10px 0;
            color: #666;
        }

        .link {
            color: #007bff;
            text-decoration: none;
            font-weight: bold;
        }

        .link:hover {
            text-decoration: underline;
        }

        .security-notice {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            padding: 15px;
            margin: 20px 0;
        }

        .security-notice h3 {
            margin: 0 0 10px 0;
            color: #495057;
            font-size: 1em;
        }

        .security-notice ul {
            margin: 0;
            padding-left: 20px;
            color: #6c757d;
            font-size: 0.9em;
        }

        .security-notice li {
            margin-bottom: 5px;
        }

        .dev-notice {
            background-color: #fff3cd;
            border: 1px solid #ffeaa7;
            color: #856404;
            padding: 10px;
            border-radius: 5px;
            margin-top: 20px;
            text-align: center;
            font-size: 0.9em;
        }

        @media (max-width: 480px) {
            .auth-container {
                margin: 20px;
                padding: 20px;
            }

            .auth-header h1 {
                font-size: 2em;
            }

            .auth-header h2 {
                font-size: 1.3em;
            }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const strengthIndicator = document.getElementById('passwordStrength');
            const strengthFill = document.getElementById('strengthFill');
            const strengthText = document.getElementById('strengthText');
            const matchIndicator = document.getElementById('passwordMatch');
            const matchText = document.getElementById('matchText');
            const submitBtn = document.getElementById('submitBtn');

            function checkPasswordStrength(password) {
                let score = 0;
                let feedback = [];

                if (password.length >= 8) score++;
                else feedback.push('at least 8 characters');

                if (/[a-z]/.test(password)) score++;
                else feedback.push('lowercase letter');

                if (/[A-Z]/.test(password)) score++;
                else feedback.push('uppercase letter');

                if (/[0-9]/.test(password)) score++;
                else feedback.push('number');

                if (/[^A-Za-z0-9]/.test(password)) score++;
                else feedback.push('special character');

                return { score, feedback };
            }

            function updatePasswordStrength() {
                const password = passwordInput.value;
                
                if (password.length === 0) {
                    strengthIndicator.style.display = 'none';
                    return;
                }

                strengthIndicator.style.display = 'block';
                const { score, feedback } = checkPasswordStrength(password);

                const percentage = (score / 5) * 100;
                strengthFill.style.width = percentage + '%';

                if (score <= 2) {
                    strengthFill.style.backgroundColor = '#dc3545';
                    strengthText.textContent = 'Weak - Missing: ' + feedback.join(', ');
                    strengthText.style.color = '#dc3545';
                } else if (score <= 3) {
                    strengthFill.style.backgroundColor = '#ffc107';
                    strengthText.textContent = 'Fair - Missing: ' + feedback.join(', ');
                    strengthText.style.color = '#856404';
                } else if (score <= 4) {
                    strengthFill.style.backgroundColor = '#fd7e14';
                    strengthText.textContent = 'Good - Missing: ' + feedback.join(', ');
                    strengthText.style.color = '#fd7e14';
                } else {
                    strengthFill.style.backgroundColor = '#28a745';
                    strengthText.textContent = 'Strong';
                    strengthText.style.color = '#28a745';
                }
            }

            function updatePasswordMatch() {
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;

                if (confirmPassword.length === 0) {
                    matchIndicator.style.display = 'none';
                    return;
                }

                matchIndicator.style.display = 'block';

                if (password === confirmPassword) {
                    matchText.textContent = 'âœ“ Passwords match';
                    matchText.className = 'match-text match';
                } else {
                    matchText.textContent = 'âœ— Passwords do not match';
                    matchText.className = 'match-text no-match';
                }
            }

            function updateSubmitButton() {
                const password = passwordInput.value;
                const confirmPassword = confirmPasswordInput.value;
                const { score } = checkPasswordStrength(password);

                const isValid = score >= 5 && password === confirmPassword && password.length > 0;
                submitBtn.disabled = !isValid;
            }

            passwordInput.addEventListener('input', function() {
                updatePasswordStrength();
                updatePasswordMatch();
                updateSubmitButton();
            });

            confirmPasswordInput.addEventListener('input', function() {
                updatePasswordMatch();
                updateSubmitButton();
            });

            // Initial state
            updateSubmitButton();
        });
    </script>
</body>
</html>
